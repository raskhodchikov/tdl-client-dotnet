version: '{build}'
image: Visual Studio 2017
configuration: Release
environment:
  sourceFolder: src
  projectName: Client
  api_key:
    secure: ZewpmA+rJPVO5I9JfzSNV4h7B1Qk6tL+udqkmlRQbtUAvSXtj+XGCFFTs9fv4hkP
  packageName: TDL.Client

before_build:
- ps: >-
    nuget restore

    if ($env:APPVEYOR_REPO_TAG -eq "true") {
      # Patch NuGet package version into .nuspec file
      $nuspecPath = "$env:APPVEYOR_BUILD_FOLDER\$env:sourceFolder\$env:projectName\$env:projectName.nuspec"
      $nuspec = [xml](Get-Content $nuspecPath)
      $nuspec.package.metadata.version = "$($env:APPVEYOR_REPO_TAG_NAME.Trim("v"))"
      $nuspec.Save($nuspecPath)
    }

build:
  project: $(sourceFolder)\$(projectName)\$(projectName).csproj
  publish_nuget: true
  publish_nuget_symbols: true
  verbosity: minimal

deploy_script:
  - appveyor DownloadFile https://dist.nuget.org/win-x86-commandline/latest/nuget.exe  
  - ps: |
    if ($env:APPVEYOR_REPO_TAG -eq "true") {
        ($artifacts.values | Where-Object {($_.path -like '*.nupkg') -and  !($_.path -like '*.symbols.nupkg')}) | foreach-object {nuget.exe push $_.path -Source https://www.nuget.org/api/v2/package -ApiKey $env:api_key; if ($lastexitcode -ne 0) {throw}}
    }

# Use this instead of deploy_script when appveyor fixes it.
#deploy:
#- provider: NuGet
#  api_key: $(api_key)
#  artifact: /.*\.nupkg/
#  on:
#    branch: master
#    APPVEYOR_REPO_TAG: true